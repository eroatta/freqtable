@@startuml Freqtable Class Diagram

together {
    package entity {
        class entity.FrequencyTable {
            + ID : string
            + Error : error
            + Values : map[string]int
            + Status() string
        }
    }

    package repository {
        interface repository.FrequencyTableRepository {
            Save(ctx context.Context, ft domain.FrequencyTable) error
            Get(ctx context.Context, ID string) (domain.FrequencyTable, error)
        }

        interface repository.WordCountRepository {
            Extract(ctx context.Context, url string) (map[string]int, error)
        }
    }
}

package usecase {
    interface usecase.CreateFrequencyTableUsecase {
        Create(context context.Context, url string) (FrequencyTable, error)
        CreateMultiple(context context.Context, urls []string) ([]FrequencyTable, error)
    }

    interface usecase.MergeFrequencyTableUsecase {
        Merge(ctx context.Context, ids []string) (FrequencyTable, error)
    }
}
usecase --> repository : accesses through >
usecase --> entity : handles >

together {
    package adapter.cli {}
    adapter.cli --> usecase : exposes >

    package adapter.rest {}
    note top of adapter.rest
    REST API, HTTP + application/json
    end note
    adapter.rest --> usecase : exposes >

    package adapter.persistence {}
    note top of adapter.persistence
    InMemory
    NoSQL
    end note
    adapter.persistence --> repository.FrequencyTableRepository : implements access to >

    package adapter.wordcount {}
    note top of adapter.wordcount
    Repository cloner and word counter
    end note
    adapter.wordcount --> repository.WordCountRepository : provides >
}

@@enduml
